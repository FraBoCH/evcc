template: ocpp
products:
  - description:
      de: OCPP 1.6J kompatible Wallbox mit Smart Charging Profil
      en: OCPP 1.6J compatible charger with Smart Charging Profile
      fr: Chargeur compatible OCPP 1.6J avec profil Smart Charging
group: generic
capabilities: ["mA", "rfid", "1p3p"]
requirements:
  description:
    de: |
      Bei OCPP verbindet sich die Wallbox (Client) zu evcc (Server).
      Die Wallbox muss daher evcc via Hostname (funktionierende DNS-Auflösung erforderlich!) oder über die IP-Adresse auf Port 8887 erreichen können.
      Standardmäßig wird die erste eingehende Verbindung mit einer beliebigen Ladepunktkennung verwendet.
      Um mehrere Ladepunkte eindeutig zuordnen zu können müssen die jeweilige Stationskennung (`stationid: `) und Anschlussnummer (`connector: `) hinterlegt werden.
      Viele Wallboxen fügen die `stationid` automatisch der Backend-URL hinzu, bei manchen muss dies händisch geschehen `ws://<evcc>:8887/<stationid>`.
      Für Zählermesswerte sollte in der Wallbox wenn möglich ein kurzes Zeitintervall (< 10s) konfiguriert werden.
      Nutzen Sie Ihre RFID-Tags (dies ermöglicht z.B. eine Fahrzeugidentifizierung) oder setzen Sie Ihre Wallbox auf "freies Laden" oder "Autostart" um die jeweils für die Ladefreigabe benötigte Transaktion zu erzeugen.

      Falls die Wallbox keinerlei Option bietet die Transaktionen lokal zu starten, kann die erweiterte Option `remotestart` genutzt werden um automatisch eine Transaktion zu starten sobald ein Fahrzeug angeschlossen wird.
      Dies sollte nur in Ausnahmefällen erforderlich sein.

      Voraussetzungen:
      * Ggf. zuvor konfigurierte OCPP-Profile (z.B. durch eine andere Backend-Anbindung) in der Wallboxkonfiguration entfernen
      * Backend-URL (Central System) in der Wallboxkonfiguration: `ws://[evcc-adresse]:8887/` (evtl noch um `stationid` erweitern)
      * Protokoll: OCPP-J v1.6, ocpp16j, JSON, Websocket, ws:// o.ä.
      * Keine Verschlüsselung, keine Authentifizierung, kein Passwort
      * Verbindung über das lokale Netzwerk

      Die konkrete Konfiguration und der tatsächliche nutzbare Funktionsumfang hängen vom Wallbox-Modell und dessen Software ab.
    en: |
      With OCPP the connection will be established from charger (client) to evcc (server).
      The charger needs to be able to reach evcc via the host name (functioning DNS resolution required!) or via the IP address on port 8887.
      By default, the first incoming connection with any station identifier is used.
      In order to be able to clearly assign several charging points, the respective station identifier (`stationid: `) and connector number (`connector: `) must be configured.
      Many wallboxes automatically add the `station id` to the backend URL, some have to do this manually `ws://<evcc>:8887/<stationid>`.
      If the charger supports sending metering values try to adjust the interval to a short time span (< 10s) .
      Use your RFID tags (this allows e.g. vehicle identification) or set your charger to "free charging" or "autostart" to generate the transaction required for charging release.

      If the charger does not offer any option to start transactions locally, the `remotestart` advanced option can be used to automatically start a transaction as soon as a vehicle is connected.
      This should only be necessary in exceptional cases.

      Requirements:
      * If necessary, remove previously configured OCPP profiles (e.g. used for a different backend connection) in the charger configuration
      * Backend URL (Central System) in the charger configuration: `ws://[evcc-adresse]:8887/` (possibly add `stationid`)
      * Protocol: OCPP-J v1.6, ocpp16j, JSON, Websocket, ws:// or similar
      * No encryption, no authentication, no password
      * Local network connection

      The specific configuration and the actual usable functionality depend on the charger model and its software.
    fr: |
      Avec OCPP, la connexion est établie entre le chargeur (client) et l'evcc (serveur).
      Le chargeur doit pouvoir atteindre evcc via le nom d'hôte (résolution DNS fonctionnelle requise !) ou via l'adresse IP sur le port 8887.
      Par défaut, la première connexion entrante avec un identifiant de station est utilisée.
      Pour pouvoir attribuer clairement plusieurs points de charge, il faut configurer l'identifiant de la station (`stationid : `) et le numéro du connecteur (`connector : `).
      De nombreuses wallbox ajoutent automatiquement l'identifiant de la station à l'URL du backend, tandis que d'autres doivent le faire manuellement `ws://<evcc>:8887/<stationid>`.
      Si le chargeur prend en charge l'envoi de valeurs de comptage, essayez d'ajuster l'intervalle à une courte durée (< 10s).
      Utilisez vos étiquettes RFID (cela permet par exemple d'identifier le véhicule) ou réglez votre chargeur sur « free charging » ou « autostart » pour générer la transaction nécessaire à la libération de la charge.

      Si le chargeur n'offre pas la possibilité de démarrer les transactions localement, l'option avancée `remotestart` peut être utilisée pour démarrer automatiquement une transaction dès qu'un véhicule est connecté.
      Cela ne devrait être nécessaire que dans des cas exceptionnels.

      Exigences :
      * Si nécessaire, supprimer les profils OCPP précédemment configurés (par exemple, utilisés pour une connexion backend différente) dans la configuration du chargeur.
      * URL du backend (système central) dans la configuration du chargeur : `ws://[evcc-adresse]:8887/` (ajouter éventuellement `stationid`)
      * Protocole : OCPP-J v1.6, ocpp16j, JSO
      * Pas d'encryption, pas d'authentification, pas de mot de passe
      * Connection en réseau local

      La configuration spécifique et les fonctionnalités réellement utilisables dépendent du modèle de chargeur et de son logiciel.
  evcc: ["sponsorship", "skiptest"]
params:
  - preset: ocpp
  - name: autostart
    deprecated: true
  - name: nostop
    deprecated: true
  - name: getconfiguration
    deprecated: true
  - name: bootnotification
    deprecated: true
  - name: chargingrateunit
    deprecated: true
render: |
  {{ include "ocpp" . }}
